name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install packages
      # This unit test -- not this library itself -- implementation requires C++17 feature on regex, which is supported since g++12.
      # On using g++, the std::regex_constants::multiline of C++17 requires version.12 or higher.
      # But currently, Ubuntu of GitHub Actions is version 20.04, which default g++ of is version 11.
      run: sudo apt install -y gcc-12 g++-12 libstdc++-12-dev unzip

    - name: Get googletest
      # Furthermore, prebuilt binaries of the libgtest-dev package cannot used here because they are built by g++11 by default, too.
      # Thus, it uses not the libgtest-dev but source set of googletest directly instead.
      run: wget https://github.com/google/googletest/archive/refs/heads/main.zip && unzip main.zip && pushd googletest-main && cmake . && make && sudo make install && popd

    - name: Update alternatives
      run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12 && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12 && sudo update-alternatives --auto g++ 

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Gtest
      working-directory: ${{github.workspace}}/build
      run: ./test/test
